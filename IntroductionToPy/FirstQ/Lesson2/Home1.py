# Найти сумму чисел списка стоящих на нечетной позиции
# Пример:[1,2,3,4] -> 4

# def spisok(n):                          # Начала функции
#     sum = 0                             # Здесь будем агрегировать
#     print("Выводим на печать все числа для суммирования: ") # Просто семафор для красоты. Правда не нашёл как в одну строку сделать
#     for i in range(0, n):               # Объявляем диапазон через range от 0 до n заданного числа в начале
#         if (i % 2 != 0):                # %2 != указывается - если остаток деления переменной i на 2 не равно 0 то:
#             sum += i                    # К переменной sum приплюсовываем значение из i
#             print(i, sep=' ', end=' ')  # Выводим на печать переменную каждой итерации. Шо бы было красиво видно (ну и мне так проще т.к. беда с математикой)
#     return(sum)                         # Возврат итоговой суммы из переменной

# n = int(input())                        # Ввод пользователем числа
# print(f'\nИ возвращаем сумму всех нечётных позиций от числа {n}: {spisok(n)}')

# Ну и вариант со списком

def spisok(n):
    lst = []
    a = 0
    for i in range(0, n):
        if (i % 2 != 0):
            lst.append(i)
            a += i          # Хотел сделать всё без введения новой переменной a. Но как показал print, каждый цикл i обновляется и заменяет текущее значение. Что, в принципе, логично.
    print(f'Выводим на печать все числа для суммирования: {lst}')
    return(a)

n = int(input())
print(f'И возвращаем сумму всех нечётных позиций от числа {n}: {spisok(n)}')
