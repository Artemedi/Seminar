#   Найти произведение пар чисел в списке. Парой считаем первый и последний элемент, второй и предпоследний и т.д. 
#   Пример: [2, 3, 4, 5, 6] => [12, 15, 16]; [2, 3, 5, 6] => [12, 15]


import random

rand_lst = []
for i in range(random.randint(2,29)):
    rand_lst.append(random.randint(1,99))
print(f'Список длиной {len(rand_lst)} до манипуляций: {rand_lst}')

# Выше решил побаловаться с рандомным вызовом

def blabla(lst): 
    rzt = []                                            # Сложилось впечатление, что мне надо выводить только списки в ответах )
    if (len(lst)%2 == 0):                               # Условие. Если длина массива четная, то:
        for i in range(0,len(lst)//2):                  # Использовать цикл for range на деленную на 2 длину массива
            rzt.append(lst[i] * lst[len(lst) -i -1])    # К списку rzt через append добавляется в конец произведение первого и последнего элеменета по индексу i
        print(f'Получаем список длиной {len(rzt)} и произведением пар: {rzt}')          
    else:                               
        for i in range(0,len(lst)//2 +1):               # Здесь условие else где range делит длину массива на 2 + 1 т.к. нечетное. Я честно не смог нагуглить как можно проще
            rzt.append(lst[i] * lst[len(lst) -i -1])    
        print(f'Получаем список длиной {len(rzt)} и произведением пар: {rzt}')

#lst = [2, 3, 4, 5, 6]  # Задаю массив (или список. В шарпе всегда звался массивом)
blabla(rand_lst)

# Восторженное ликование! Но хотелось бы посмотреть более короткий вариант. Я на 99% уверен, что есть такой!

# Иии.... такой вариант нашелся

def blabla(lst): 
    rzt = []
    for i in range(0,len(lst)//2 + len(lst)%2): # Убираются все условия т.к. %2 вернёт мне либо 0 либо 1.. а ведь это мне и нужно! Оказалось что надо было смотреть под другим углом!
        rzt.append(lst[i] * lst[len(lst) -i -1])
    print(f'Получаем список длиной {len(rzt)} и произведением пар: {rzt}')          


#lst = [2, 3, 4, 5, 6]  # Задаю массив (или список. В шарпе всегда звался массивом)
blabla(rand_lst)
